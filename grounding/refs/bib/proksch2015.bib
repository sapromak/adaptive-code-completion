@article{proksch2015,
  author     = {Proksch, Sebastian and Lerch, Johannes and Mezini, Mira},
  title      = {Intelligent Code Completion with Bayesian Networks},
  year       = {2015},
  issue_date = {December 2015},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {25},
  number     = {1},
  issn       = {1049-331X},
  url        = {https://doi.org/10.1145/2744200},
  doi        = {10.1145/2744200},
  abstract   = {Code completion is an integral part of modern Integrated Development Environments (IDEs). Developers often use it to explore Application Programming Interfaces (APIs). It is also useful to reduce the required amount of typing and to help avoid typos. Traditional code completion systems propose all type-correct methods to the developer. Such a list is often very long with many irrelevant items. More intelligent code completion systems have been proposed in prior work to reduce the list of proposed methods to relevant items.This work extends one of these existing approaches, the Best Matching Neighbor (BMN) algorithm. We introduce Bayesian networks as an alternative underlying model, use additional context information for more precise recommendations, and apply clustering techniques to improve model sizes. We compare our new approach, Pattern-based Bayesian Networks (PBN), to the existing BMN algorithm. We extend previously used evaluation methodologies and, in addition to prediction quality, we also evaluate model size and inference speed.Our results show that the additional context information we collect improves prediction quality, especially for queries that do not contain method calls. We also show that PBN can obtain comparable prediction quality to BMN, while model size and inference speed scale better with large input sizes.},
  journal    = {ACM Trans. Softw. Eng. Methodol.},
  month      = dec,
  articleno  = {3},
  numpages   = {31},
  keywords   = {Content assist, code completion, code recommender, evaluation, integrated development environments, machine learning, productivity}
}
